// <auto-generated />
using E_Commerce_Api.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce_Api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240208143237_UpdateDetail2")]
    partial class UpdateDetail2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_Commerce_Api.Model.AltKategori", b =>
                {
                    b.Property<int>("AltKategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AltKategoriID"), 1L, 1);

                    b.Property<string>("AltKategoriName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kategoriid")
                        .HasColumnType("int");

                    b.HasKey("AltKategoriID");

                    b.HasIndex("Kategoriid");

                    b.ToTable("AltKategori");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Kategori", b =>
                {
                    b.Property<int>("Kategoriid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kategoriid"), 1L, 1);

                    b.Property<string>("KategoriName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Kategoriid");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Sepet", b =>
                {
                    b.Property<int>("Sepetid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sepetid"), 1L, 1);

                    b.Property<int>("Urunid")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Sepetid");

                    b.HasIndex("Urunid");

                    b.HasIndex("Userid");

                    b.ToTable("Sepet");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Urun", b =>
                {
                    b.Property<int>("Urunid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Urunid"), 1L, 1);

                    b.Property<int>("AltKategoriID")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrunAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Urunid");

                    b.HasIndex("AltKategoriID");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Userid"), 1L, 1);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.AltKategori", b =>
                {
                    b.HasOne("E_Commerce_Api.Model.Kategori", "Kategori")
                        .WithMany("AltKategoris")
                        .HasForeignKey("Kategoriid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Sepet", b =>
                {
                    b.HasOne("E_Commerce_Api.Model.Urun", "Urun")
                        .WithMany("Sepets")
                        .HasForeignKey("Urunid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Api.Model.User", "User")
                        .WithMany("Sepets")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Urun", b =>
                {
                    b.HasOne("E_Commerce_Api.Model.AltKategori", "AltKategori")
                        .WithMany()
                        .HasForeignKey("AltKategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltKategori");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Kategori", b =>
                {
                    b.Navigation("AltKategoris");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.Urun", b =>
                {
                    b.Navigation("Sepets");
                });

            modelBuilder.Entity("E_Commerce_Api.Model.User", b =>
                {
                    b.Navigation("Sepets");
                });
#pragma warning restore 612, 618
        }
    }
}
